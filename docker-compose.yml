version: '3.7'

services:

  airflow-postgres:
    image: postgres:14.1-alpine
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - airflow-pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5

  webserver:
    build:
      context: ./airflow-etl
    container_name: airflow_webserver
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@airflow-postgres/airflow
      AIRFLOW__CORE__FERNET_KEY: 'L_x43MRdzsoGOzCGwqcLhcpOZ6fQMrvNw_AT89oKdl4='
      AIRFLOW__WEBSERVER__SECRET_KEY: 'YOUR_SECRET_KEY_HERE'
      AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
    ports:
      - 8082:8080
    depends_on:
      airflow-postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "[ -f /opt/airflow/airflow-webserver.pid ]"]
      interval: 30s
      timeout: 30s
      retries: 3
    command: ["airflow", "webserver"]

  scheduler:
    build:
      context: ./airflow-etl
    container_name: airflow_scheduler
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@airflow-postgres/airflow
      AIRFLOW__CORE__FERNET_KEY: 'L_x43MRdzsoGOzCGwqcLhcpOZ6fQMrvNw_AT89oKdl4='
      AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
    volumes:
      - ./airflow-etl/dags:/opt/airflow/dags
      - ./airflow-etl/src:/opt/airflow/src
    depends_on:
      airflow-postgres:
        condition: service_healthy
    command: ["airflow", "scheduler"]

  webscrapper:
    build: ./scrapping
    container_name: webscrapper
    depends_on:
      - postgres
    networks:
      - webscrapper-network

  postgres:
    build: 
      context: ./db
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: webscrapper
    volumes:
      - pg-data:/var/lib/postgresql/data
    networks:
      - webscrapper-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5
  
  adminer:
    image: adminer
    container_name: adminer
    ports:
      - 8081:8080
    networks:
      - webscrapper-network
    depends_on:
      - postgres

networks:
  webscrapper-network:

volumes:
  airflow-pgdata:
  pg-data:
