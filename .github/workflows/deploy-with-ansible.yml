name: Build, Push, and Deploy with Ansible

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        context: .
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/webscraper:${{ github.run_id }}

  test-ssh:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install SSH Client
      run: sudo apt-get update && sudo apt-get install -y openssh-client sshpass

    - name: Test SSH connection
      env:
        VPS_IP: ${{ secrets.VPS_IP }}
        VPS_PORT: ${{ secrets.VPS_PORT }}
        VPS_USER: ${{ secrets.VPS_USER }}
        VPS_PASSWORD: ${{ secrets.VPS_PASSWORD }}
      run: |
        sshpass -p "${{ env.VPS_PASSWORD }}" ssh -o StrictHostKeyChecking=no ${{ env.VPS_USER }}@${{ env.VPS_IP }} -p ${{ env.VPS_PORT }} "echo 'SSH connection successful!'"

  deploy:
    needs: [build, test-ssh]
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install Ansible
      run: sudo apt-get update && sudo apt-get install -y ansible

    - name: Install Ansible Collection
      run: |
        ansible-galaxy collection install community.docker --force

    - name: Run Ansible playbook
      env:
        ANSIBLE_HOST_KEY_CHECKING: 'false'
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        S3_BUCKET_NAME: ${{ secrets.S3_BUCKET_NAME }}
        DOCKER_IMAGE: ${{ secrets.DOCKERHUB_USERNAME }}/webscraper:${{ github.run_id }}
      run: |
        ansible-playbook ansible/playbook.yml \
          -e "docker_image=${{ env.DOCKER_IMAGE }}" \
          -e "aws_access_key_id=${{ env.AWS_ACCESS_KEY_ID }}" \
          -e "aws_secret_access_key=${{ env.AWS_SECRET_ACCESS_KEY }}" \
          -e "s3_bucket_name=${{ env.S3_BUCKET_NAME }}" \
          -e "vps_user=${{ secrets.VPS_USER }}" \
          -e "vps_password=${{ secrets.VPS_PASSWORD }}" \
          -e "vps_ip=${{ secrets.VPS_IP }}" \
          -e "vps_port=${{ secrets.VPS_PORT }}"

    - name: Test container running
      run: |
        sshpass -p "${{ secrets.VPS_PASSWORD }}" ssh -o StrictHostKeyChecking=no ${{ secrets.VPS_USER }}@${{ secrets.VPS_IP }} -p ${{ secrets.VPS_PORT }} "docker ps"
