---
- name: Deploy Docker container on VPS
  hosts: localhost  
  gather_facts: false
  become: true

  tasks:

    - name: Pull Docker image 
      docker_image:
        name: "{{ docker_image }}"
        source: pull
      vars :
        ansible_python_interpreter: /usr/bin/python3

    - name: Stop and remove existing container
      docker_container:
        name: webscraper
        state: absent
      ignore_errors: yes

    - name: Run Docker container on VPS
      community.docker.docker_container:
        name: webscraper
        image: "{{ docker_image }}"
        state: started
        restart_policy: always
        env:
          AWS_ACCESS_KEY_ID: "{{ aws_access_key_id }}"
          AWS_SECRET_ACCESS_KEY: "{{ aws_secret_access_key }}"
          S3_BUCKET_NAME: "{{ s3_bucket_name }}"
      delegate_to: "{{ vps_ip }}"
      become: true
      vars:
        ansible_ssh_user: "{{ vps_user }}"
        ansible_ssh_pass: "{{ vps_password }}"
        ansible_ssh_port: "{{ vps_port }}"

    - name: Check if container is running
      shell: docker ps | grep webscraper
      register: container_status
      ignore_errors: yes
    
    - name: Check environment variables inside the container
      shell: |
        docker exec webscraper python3 -c "import os; assert os.environ['AWS_ACCESS_KEY_ID'] == '{{ aws_access_key_id }}'"
        docker exec webscraper python3 -c "import os; assert os.environ['AWS_SECRET_ACCESS_KEY'] == '{{ aws_secret_access_key }}'"
        docker exec webscraper python3 -c "import os; assert os.environ['S3_BUCKET_NAME'] == '{{ s3_bucket_name }}'"
      delegate_to: "{{ vps_ip }}"
      become: true
      ignore_errors: yes